======================================================================
Belous
Ãœbungsblatt 05
ðŸŸ¡ðŸ”´ðŸŸ¢ðŸŸ¢ðŸŸ¡ðŸŸ¡ 8/10, bestanden

Die .lhs Datei hat nicht kompiliert, da kein Code darin enthalten war. 
Codezeilen mÃ¼ssen explizit mit > gekennzeichnet sein. 
FÃ¼r diese Abgabe hab ich die > eingefÃ¼gt, da die Datei danach kompiliert, werte ich diese Mal die Programmieraufgaben noch. 
FÃ¼r zukÃ¼nftige Abgaben fÃ¼hrt eine nicht kompilierende Datei zum nicht-bestehen aller Programmieraufgaben auf diesem Blatt.  
======================================================================

(----Aufgabe 1----) ðŸŸ¡
[JFM] Art der Reduktion/Konversion angeben (beta, delta, ...)

1. And True True
-> (Î»a b. a b False) True True
-> (Î»b. True b False) True
-> True True False
-> (Î»x y. x) True False
-> True

True AND True -> True

2. And True False
-> (Î»a b. a b False) True False
-> (Î»b. True b False) False
-> True False False
-> (Î»x y. x) False False
-> False

True AND False -> False

3. And False True
-> (Î»a b. a b False) False True
-> (Î»b. False b False) True
-> False True False
-> (Î»x y. y) True False
-> False

False AND True -> False

4. And False False
-> (Î»a b. a b False) False False
-> (Î»b. False b False) False
-> False False False
-> (Î»x y. y) False False
-> False

False AND False -> False

[JFM] Aufgabenteil 2 fehlt

(----Aufgabe 2----) ðŸ”´

Y = Î» x. (Î» y. x (y y))(Î» y. x (y y))
f = Î» g. Î» n. if (= n 0) 1 (* n (g (- n 1)))
Y f 2
Y f 2 = Î» x. (Î» y. x (y y))(Î» y. x (y y)) f 2 
       ^                                 ^
[JFM] Hier fehlen Klammern, der richtig eigesetzte Ausdruck wÃ¤re hier:
[JFM] (Î» x. (Î» y. x (y y))(Î» y. x (y y))) f 2
[JFM] Die folgende Î²-Reduktion ist trotzdem richtig

    -> (Î» y. f (y y)) (Î» y. f (y y)) 2 
        ^^^^^^^^^^^^   ^^^^^^^^^^^^  ^
        Ausdruck       Argument 1    Argument 2

[JFM] Hier wurde allerdings der falsche Ausdruck ausgewertet
[JFM] Oben steht der linke Ausdruck (markiert) mit zwei Argumenten
[JFM] Danach mÃ¼sste stehen:
[JFM] (f ((Î» y. f (y y)) (Î» y. f (y y)))) 2 

    ->  (Î» y. f (y y))f(2 2) 
    -> (Î» y. f (y y))(Î» g. if (= 2 0) 1 (* 2 (g (- 2 1))))

    [JFM] Hier ist nicht die komplette Definition fÃ¼r f eingesetzt worden und (2 2) verschwindet

    ->  (Î» y. f (y y))(Î» g. * 2 (g (1))) 
    -> (Î» y. f (y y)) 2 -> f (2 2)
    ->  Î» g. if (= 2 0) 1 (* 2 (g (- 2 1))) 
    -> Î» g. * 2 (g (1)) 
    -> * 2 1 -> 2
2! = 1 * 2 

(----Aufgabe 3----) ðŸŸ¢

> middle :: [a] -> a
> middle mid  
>    | even len =  mid !! (middleIndex - 1)
>    | otherwise  = mid !! middleIndex
>    where
>    len = length mid
>    middleIndex = length mid `div` 2 

(----Aufgabe 4----) ðŸŸ¢

> allEqual :: [Integer] -> Bool
> allEqual []  = True 
> allEqual (x:xs) = all (== x) xs
 
(----Aufgabe 5----) ðŸŸ¡

> gaps :: Double -> [Double] -> [(Double, Double)]
> gaps delta xs   
>    | length xs < 2 = []
>    | delta < abs (head xs - head (tail xs)) = (head xs, head (tail xs)): gaps delta (tail xs)
>    | otherwise = gaps delta (tail xs)

Die Fallunterscheidung fÃ¼r leere, einelementige und mehrelementige Listen geht etwas eleganter mit pattern matching, die Funktion tut aber das was sie soll.
    
(----Aufgabe 6----) ðŸŸ¡

Gruppe I: (F g) h
1. f g h -> (f g) h     ðŸ—¸
3. f g $ h -> (f g) h   ðŸ—¸

Gruppe II: (Î»d. f g (h d))
2. f  g . h  -> (Î» a b c d. a b (c d)) f g h -> (Î»b c d. f b (c d)) g h -> (c d. f g (c d)) h -> (Î»d. f g (h d))     ðŸ—¸

Gruppe III: (Î»d. f ((g h) d))
4. f . g h -> (Î»a b c d. a ((b c) d)) f g h -> (Î»b c d. f ((b c) d)) g h -> (Î»c d. f ((e c) d)) h -> (Î»d . f ((g h) d))  ðŸ—¸

Gruppe IV: (Î»d. f (g (h d)))
5. f . g . h -> (Î»a b c d. a (b (c d))) f g h -> (Î»b c d. f (b(c d))) g h -> (Î»c d. f (g (c d))) h ->(Î»d. f(g (h d))) ðŸ—¸

Gruppe V: f (g h)
6. f . g $ h -â€º (f . g) h -> (Î»a b c. a (b c)) f g h -> (Î»b c. f (b c) ) g h -> (Î»c. f (g c)) h -> f (g h)  ðŸ—¸
7. f $ g  h -> f (g h)                                                                                      ðŸ—¸
9. f $ g $ h -> (f (g h)) -> f (g h)                                                                        ðŸ—¸

Gruppe VI: f (Î»g. g (h g))
8. f $ g . h -> f (g . h) -> f ((Î»a b c. a (b c)) g h) -> f ((Î»b c. g (b c)) h) -> f (Î»c. g (h c))

[JFM] Richtig, --8 steht alleine, aber der Ausdruck ist f (Î»d. g (h d))
[JFM] Daserste Vorkommen von g ist frei. 